# –ó–∞–¥–∞–Ω–∏–µ 2. 
# –†–∞–∑—Ä–∞–±–æ—Ç–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É —Å –ø—Ä–∏–º–µ–Ω–µ–Ω–∏–µ–º –ø–∞–∫–µ—Ç–∞ tk, 
# –≤–∑—è–≤ –≤ –∫–∞—á–µ—Å—Ç–≤–µ —É—Å–ª–æ–≤–∏—è –æ–¥–Ω—É –ª—é–±—É—é –∑–∞–¥–∞—á—É –∏–∑ –ü–ó ‚Ññ 3 ‚Äì 8.

# –ü–ó 7. –ó–∞–¥–∞–Ω–∏–µ 2
# –î–∞–Ω–∞ —Å—Ç—Ä–æ–∫–∞-–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ.
# –ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å –≤—Å—ë, –≤—ã–ø–æ–ª–Ω–∏–≤ —Ü–∏–∫–ª–∏—á–µ—Å–∫—É—é –∑–∞–º–µ–Ω—É –∫–∞–∂–¥–æ–π –±—É–∫–≤—ã
# –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∑–∞ –Ω–µ–π –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ –∏ —Å–æ—Ö—Ä–∞–Ω–∏–≤ –ø—Ä–∏ —ç—Ç–æ–º —Ä–µ–≥–∏—Å—Ç—Ä –±—É–∫–≤
# (¬´–ê¬ª –ø–µ—Ä–µ–π–¥–µ—Ç –≤ ¬´–ë¬ª, ¬´–∞¬ª -- –≤ ¬´–±¬ª, ¬´–ë¬ª - –≤ ¬´–í¬ª, ¬´—è¬ª - –≤ ¬´–∞¬ª –∏ —Ç. –¥.).
# –ë—É–∫–≤—É ¬´—ë¬ª –≤ –∞–ª—Ñ–∞–≤–∏—Ç–µ –Ω–µ —É—á–∏—Ç—ã–≤–∞—Ç—å (¬´–µ¬ª –¥–æ–ª–∂–Ω–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏—Ç—å –≤ ¬´–∂¬ª).
# –ó–Ω–∞–∫–∏ –ø—Ä–µ–ø–∏–Ω–∞–Ω–∏—è –∏ –ø—Ä–æ–±–µ–ª—ã –Ω–µ –∏–∑–º–µ–Ω—è—Ç—å.

from tkinter import *


def exch_lang():
    if lang_btn["text"] == "rus":
        titl["text"] = "–ü—Ä–æ—Å—Ç–æ–π –ì–ò –¥–ª—è —à–∏—Ñ—Ä–∞ –¶–µ–∑–∞—Ä—è"
        lbl_sh["text"] = "- –í—ã–±–µ—Ä–∏ —Å–¥–≤–∏–≥ üëá"
        scl["to"] = 31
        lbl_inv["text"] = "–í–≤–µ–¥–∏ —Å–≤–æ–π —Ç–µ–∫—Å—Ç (üêª)"
        encr_btn["text"] = "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å"
        lbl_out["text"] = "–ó–∞—à–∏—Ñ—Ä–æ–≤–∞–Ω–Ω—ã–π —Ç–µ–∫—Å—Ç"
        lang_btn["text"] = "eng"
    else:
        titl["text"] = "Symple GUI for Caesar`s Cipher"
        lbl_sh["text"] = "- Select shift üëá"
        scl["to"] = 25
        lbl_inv["text"] = "Enter your text (‚òï)"
        encr_btn["text"] = "Encrypt"
        lbl_out["text"] = "Encrypted text"
        lang_btn["text"] = "rus"


def encryption():
    if lang_btn["text"] == "rus":
        alp = tuple("abcdefghijklmnopqrstuvwxyz")
        alp_b = tuple("abcdefghijklmnopqrstuvwxyz".upper())
    else:
        alp = tuple("–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è")
        alp_b = tuple("–∞–±–≤–≥–¥–µ–∂–∑–∏–π–∫–ª–º–Ω–æ–ø—Ä—Å—Ç—É—Ñ—Ö—Ü—á—à—â—ä—ã—å—ç—é—è".upper())
        


    shift = int(scl.get())
    text = txt_ent.get("1.0", END)

    temp = "".join(alp_b[-len(alp) + shift + alp_b.index(s)] if s in alp_b 
                    else alp[-len(alp) + shift + alp.index(s)] if s in alp 
                    else s 
                    for s in text)

    # for s in text:
    #     news = s
    #     if s in alp_b:
    #         news = alp_b[-len(alp) + shift + alp_b.index(s)]
    #     elif s in alp:
    #         news = alp[-len(alp) + shift + alp.index(s)]
    #     temp += news
    
    if text != "\n":
        ans_lbl["text"] = temp
    

# –î–æ–±–∞–≤—Ç—å —Ñ–æ—Ç–∫—É

row_size = 25
column_size = 75


root = Tk()
root.title("Caesar's Cipher")
root.rowconfigure(
    [i for i in range(7)],
    weight=1,
    minsize=row_size
)
root.columnconfigure(
    [0],
    weight=1,
    minsize=column_size
)
root.resizable(False, False)


titl = Label(
    master=root,
    text="Symple GUI for Caesar`s Cipher",
    font="Times 20 bold"
)
titl.grid(row=0, column=0, padx=(10, 10), sticky="swen")


frm_slc = Frame(master=root)
frm_slc.rowconfigure(
    [0, 1],
    weight=1,
    minsize=row_size/2
)
frm_slc.columnconfigure(
    [0],
    weight=1,
    minsize=column_size
)
frm_slc.grid(row=1, column=0, sticky="swen")

lbl_sh = Label(master=frm_slc, text="- Select shift üëá", font="Times 12 bold")
lbl_sh.grid(row=0, column=0, padx=(10, 10), pady=(10, 0), sticky="sw")

scl = Scale(
    master=frm_slc,
    orient=HORIZONTAL,
    from_=1,
    to=25
)
scl.grid(row=1, column=0, padx=(20, 20), sticky="swen")


frm_ent = Frame(master=root)
frm_ent.rowconfigure(
    [0, 1],
    weight=1,
    minsize=row_size
)
frm_ent.columnconfigure(
    [0],
    weight=1, 
    minsize=column_size
)
frm_ent.grid(row=2, column=0, padx=(10, 10), pady=(10, 0), sticky="swen")

lbl_inv = Label(master=frm_ent, text="Enter your text (‚òï)", font="Times 12 bold")
lbl_inv.grid(row=0, sticky="sw")

txt_ent = Text(
    master=frm_ent,
    height=3,
    width=5
)
txt_ent.grid(row=1, sticky="swen")


frm_btn = Frame(master=root)
frm_btn.rowconfigure(
    [0],
    weight=1,
    minsize=row_size
)
frm_btn.columnconfigure(
    [0, 1],
    weight=1,
    minsize=column_size
)
frm_btn.grid(row=3, padx=(10, 10), sticky="swen")

encr_btn = Button(
    master=frm_btn,
    text="Encrypt",
    font="Times 10 bold",
    command=encryption
)
encr_btn.grid(row=0, column=0, padx=(0, 10), pady=(10, 0), sticky="swen")


frm_ans = Frame(master=root)
frm_ans.rowconfigure(
    [0, 1],
    weight=1,
    minsize=row_size
)
frm_ans.columnconfigure(
    [0],
    weight=1,
    minsize=column_size
)
frm_ans.grid(row=4, column=0, padx=(10, 10), pady=(10, 0), sticky="swen")


lbl_out = Label(master=frm_ans, text="Encrypted text", font="Times 12 bold")
lbl_out.grid(row=0, sticky="sw")

ans_lbl = Label(
    master=frm_ans,
    text="Simple text for simple label\n",
    font="Times 14"
)
ans_lbl.grid(row=1, column=0, sticky="nw")


lang_btn = Button(
    master=root,
    text="rus",
    bg="red",
    font="Times 12 bold",
    command=exch_lang,
    height=1
)
lang_btn.grid(row=5, column=0, padx=(10, 300), sticky="swe")

if __name__ == "__main__":
    root.mainloop()